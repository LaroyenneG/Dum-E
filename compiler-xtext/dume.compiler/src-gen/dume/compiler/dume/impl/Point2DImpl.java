/**
 * generated by Xtext 2.17.0
 */
package dume.compiler.dume.impl;

import dume.compiler.dume.DumePackage;
import dume.compiler.dume.Point2D;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Point2 D</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link dume.compiler.dume.impl.Point2DImpl#getI <em>I</em>}</li>
 *   <li>{@link dume.compiler.dume.impl.Point2DImpl#getJ <em>J</em>}</li>
 *   <li>{@link dume.compiler.dume.impl.Point2DImpl#getMap <em>Map</em>}</li>
 * </ul>
 *
 * @generated
 */
public class Point2DImpl extends PointImpl implements Point2D
{
  /**
   * The cached value of the '{@link #getI() <em>I</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getI()
   * @generated
   * @ordered
   */
  protected dume.compiler.dume.Number i;

  /**
   * The cached value of the '{@link #getJ() <em>J</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getJ()
   * @generated
   * @ordered
   */
  protected dume.compiler.dume.Number j;

  /**
   * The default value of the '{@link #getMap() <em>Map</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMap()
   * @generated
   * @ordered
   */
  protected static final String MAP_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getMap() <em>Map</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMap()
   * @generated
   * @ordered
   */
  protected String map = MAP_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected Point2DImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return DumePackage.Literals.POINT2_D;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public dume.compiler.dume.Number getI()
  {
    return i;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetI(dume.compiler.dume.Number newI, NotificationChain msgs)
  {
    dume.compiler.dume.Number oldI = i;
    i = newI;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DumePackage.POINT2_D__I, oldI, newI);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setI(dume.compiler.dume.Number newI)
  {
    if (newI != i)
    {
      NotificationChain msgs = null;
      if (i != null)
        msgs = ((InternalEObject)i).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DumePackage.POINT2_D__I, null, msgs);
      if (newI != null)
        msgs = ((InternalEObject)newI).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DumePackage.POINT2_D__I, null, msgs);
      msgs = basicSetI(newI, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DumePackage.POINT2_D__I, newI, newI));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public dume.compiler.dume.Number getJ()
  {
    return j;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetJ(dume.compiler.dume.Number newJ, NotificationChain msgs)
  {
    dume.compiler.dume.Number oldJ = j;
    j = newJ;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DumePackage.POINT2_D__J, oldJ, newJ);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setJ(dume.compiler.dume.Number newJ)
  {
    if (newJ != j)
    {
      NotificationChain msgs = null;
      if (j != null)
        msgs = ((InternalEObject)j).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DumePackage.POINT2_D__J, null, msgs);
      if (newJ != null)
        msgs = ((InternalEObject)newJ).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DumePackage.POINT2_D__J, null, msgs);
      msgs = basicSetJ(newJ, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DumePackage.POINT2_D__J, newJ, newJ));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getMap()
  {
    return map;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setMap(String newMap)
  {
    String oldMap = map;
    map = newMap;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DumePackage.POINT2_D__MAP, oldMap, map));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case DumePackage.POINT2_D__I:
        return basicSetI(null, msgs);
      case DumePackage.POINT2_D__J:
        return basicSetJ(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case DumePackage.POINT2_D__I:
        return getI();
      case DumePackage.POINT2_D__J:
        return getJ();
      case DumePackage.POINT2_D__MAP:
        return getMap();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case DumePackage.POINT2_D__I:
        setI((dume.compiler.dume.Number)newValue);
        return;
      case DumePackage.POINT2_D__J:
        setJ((dume.compiler.dume.Number)newValue);
        return;
      case DumePackage.POINT2_D__MAP:
        setMap((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case DumePackage.POINT2_D__I:
        setI((dume.compiler.dume.Number)null);
        return;
      case DumePackage.POINT2_D__J:
        setJ((dume.compiler.dume.Number)null);
        return;
      case DumePackage.POINT2_D__MAP:
        setMap(MAP_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case DumePackage.POINT2_D__I:
        return i != null;
      case DumePackage.POINT2_D__J:
        return j != null;
      case DumePackage.POINT2_D__MAP:
        return MAP_EDEFAULT == null ? map != null : !MAP_EDEFAULT.equals(map);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (map: ");
    result.append(map);
    result.append(')');
    return result.toString();
  }

} //Point2DImpl
